.data
mensaje_concatenado: .space 20
espacio: .ascii " "
b: .word 10
c: .ascii "hola"
mensaje0: .ascii "adios"
mensaje1: .ascii "mundo"

.bss
a: .space 4
d: .space 4
t2 .space 4
t1 .space 4

.text
.global _start

_start:

	# Se actualiza la variable b
	li t0 100
	la t1 b
	sw t0, 0(t1)

	#Realizando Operacion
	li x2, b
	addi x1, x2, 10
	la x4, t1
	sw x1, 0(x4)
	li x2, t1
	li x3, 2
	div x1, x2, x3
	la x4, a
	sw x1, 0(x4)

	#Imprimiendo
	la t0, b
	la t1, mensaje_concatenado
	jal ra, copiar_cadena
	la t0, b
	jal ra, obtener_longitud
	add t1, t1, t3
	li a0, 1
	la a1, mensaje_concatenado
	jal ra, obtener_longitud
	mv a2, a1
	li a7, 64
	ecall

	# Se actualiza la variable c
	la t0, mensaje0
	la t1, c
	jal ra, copiar_cadena

	#Imprimiendo
	la t0, c
	la t1, mensaje_concatenado
	jal ra, copiar_cadena
	la t0, c
	jal ra, obtener_longitud
	add t1, t1, t3
	la t0, espacio
	la t1, mensaje_concatenado
	jal ra, copiar_cadena
	la t0, espacio
	jal ra, obtener_longitud
	add t1, t1, t3
	la t0, mensaje1
	la t1, mensaje_concatenado
	jal ra, copiar_cadena
	la t0, mensaje1
	jal ra, obtener_longitud
	add t1, t1, t3
	li a0, 1
	la a1, mensaje_concatenado
	jal ra, obtener_longitud
	mv a2, a1
	li a7, 64
	ecall

	#Realizando Operacion
	li x2, 2
	li x3, 2
	mul x1, x2, x3
	la x4, t1
	sw x1, 0(x4)
	li x2, t1
	li x3, 2
	mul x1, x2, x3
	la x4, t2
	sw x1, 0(x4)
	li x2, t2
	li x3, 2
	mul x1, x2, x3
	la x4, a
	sw x1, 0(x4)

	#Realizando Operacion
	li x2, 2
	li x3, 2
	call potencia
	la x4, t1
	sw x1, 0(x4)
	li x2, t1
	li x3, 2
	call potencia
	la x4, a
	sw x1, 0(x4)

	# Salida del programa
	li a7, 93
	li a0, 0
	ecall

#Funciones utilizadas

copiar_cadena:
	copiar_loop:
		lb t2, 0(t0)
		sb t2, 0(t1)
		addi t0, t0, 1
		addi t1, t1, 1
		bnez t2, copiar_loop
	ret

obtener_longitud:
	longitud_loop:
		lb t2, 0(t0)
		beqz t2, longitud_fin
		addi t0, t0, 1
		addi t3, t3, 1
		j longitud_loop
	longitud_fin:
	ret

potencia:
	mv t0, a0
	mv t1, a1
	li a0, 1
potencia_loop:
	beq t1, zero, potencia_end
	mul a0, a0, t0
	addi t1, t1, -1
	j potencia_loop
potencia_end:
	ret